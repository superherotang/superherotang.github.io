<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo安装部署配置HTTPS</title>
      <link href="/a5sd15s3"/>
      <url>/a5sd15s3</url>
      
        <content type="html"><![CDATA[<p>把 Hexo 博客部署到服务器并配置HTTPS</p><h1 id="一、开始"><a href="#一、开始" class="headerlink" title="一、开始"></a>一、开始</h1><h2 id="配置本地-node-环境"><a href="#配置本地-node-环境" class="headerlink" title="配置本地 node 环境"></a>配置本地 node 环境</h2><h3 id="1、nodejs下载-官网下载"><a href="#1、nodejs下载-官网下载" class="headerlink" title="1、nodejs下载 官网下载"></a>1、nodejs下载 <a href="http://nodejs.cn/download/">官网下载</a></h3><h3 id="2、安装nodejs"><a href="#2、安装nodejs" class="headerlink" title="2、安装nodejs"></a>2、安装nodejs</h3><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-20210521152620516.png" alt="image-20210521152620516"></p><h2 id="配置本地-git-环境"><a href="#配置本地-git-环境" class="headerlink" title="配置本地 git 环境"></a>配置本地 git 环境</h2><h3 id="1、git下载-官网下载"><a href="#1、git下载-官网下载" class="headerlink" title="1、git下载 官网下载"></a>1、git下载 <a href="https://git-scm.com/">官网下载</a></h3><h3 id="2、安装git"><a href="#2、安装git" class="headerlink" title="2、安装git"></a>2、安装git</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h1 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="1、初始化hexo项目"><a href="#1、初始化hexo项目" class="headerlink" title="1、初始化hexo项目"></a>1、初始化hexo项目</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-20210521154341249.png" alt="image-20210521154341249"></p><h3 id="2、生成blog后安装主题"><a href="#2、生成blog后安装主题" class="headerlink" title="2、生成blog后安装主题"></a>2、生成blog后安装主题</h3><p>我这里使用的是butterfly主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="3、修改配置文件-config-yml，把主题改为butterfly"><a href="#3、修改配置文件-config-yml，把主题改为butterfly" class="headerlink" title="3、修改配置文件_config.yml，把主题改为butterfly"></a>3、修改配置文件_config.yml，把主题改为butterfly</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><blockquote><p>把主题文件夹中的 _config.yml 复制到 Hexo 根目录里，同时重新命名为 _config.butterfly.yml。</p><p>以后只需要在 _config.butterfly.yml进行配置就行。</p><p>Hexo会自动合併主题中的config.yml和 _config.butterfly.yml里的配置，如果存在同名配置，会使用config.butterfly.yml的配置，其优先度较高</p></blockquote><p>具体配置请参考<a href="https://butterfly.js.org/">butterfly官网</a></p><p>本地测试、在根目录下git执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h1 id="三、git环境搭建"><a href="#三、git环境搭建" class="headerlink" title="三、git环境搭建"></a>三、git环境搭建</h1><p>生成ssh认证，执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email youremail@example.com</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br><span class="line">git config --global core.autocrlf false  // 禁用自动转换，这个不设置后面上传时会出现警告，如下</span><br></pre></td></tr></table></figure><p>获取到的ssh认证在C:\Users\yourname\.ssh中</p><h1 id="四、服务器配置"><a href="#四、服务器配置" class="headerlink" title="四、服务器配置"></a>四、服务器配置</h1><h3 id="1、登录到远程服务器"><a href="#1、登录到远程服务器" class="headerlink" title="1、登录到远程服务器"></a>1、登录到远程服务器</h3><h3 id="2、安装-git"><a href="#2、安装-git" class="headerlink" title="2、安装 git"></a>2、安装 git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version // 如无，则安装</span><br><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</span><br><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><h3 id="3、创建用户并配置其仓库"><a href="#3、创建用户并配置其仓库" class="headerlink" title="3、创建用户并配置其仓库"></a>3、创建用户并配置其仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd git</span><br><span class="line">passwd git // 设置密码</span><br><span class="line">su git // 这步很重要，不切换用户后面会很麻烦</span><br><span class="line">cd /home/git/</span><br><span class="line">mkdir -p projects/blog // 项目存在的真实目录</span><br><span class="line">mkdir repos &amp;&amp; cd repos</span><br><span class="line">git init --bare blog.git // 创建一个裸露的仓库</span><br><span class="line">cd blog.git/hooks</span><br><span class="line">vi post-receive // 创建 hook 钩子函数，输入了内容如下</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure><h3 id="4、添加完毕后修改权限"><a href="#4、添加完毕后修改权限" class="headerlink" title="4、添加完毕后修改权限"></a>4、添加完毕后修改权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br><span class="line">exit // 退出到 root 登录</span><br><span class="line">chown -R git:git /home/git/repos/blog.git // 添加权限</span><br></pre></td></tr></table></figure><p>返回windows，测试git仓库是否可用，另找空白文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@server_ip:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p>如果能把空仓库拉下来，就说明 git 仓库搭建成功了</p><h3 id="5、建立ssh信任关系，在本地电脑"><a href="#5、建立ssh信任关系，在本地电脑" class="headerlink" title="5、建立ssh信任关系，在本地电脑"></a>5、建立ssh信任关系，在本地电脑</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i C:/Users/yourname/.ssh/id_rsa.pub git@server_ip</span><br><span class="line">ssh git@server_ip // 测试能否登录</span><br></pre></td></tr></table></figure><p><strong>注</strong>：此时的 ssh 登录 git 用户不需要密码！否则就有错，请仔细重复步骤 3-5</p><h3 id="6、为了安全起见禁用-git-用户的-shell-登录权限，从而只能用-git-clone，git-push-等登录"><a href="#6、为了安全起见禁用-git-用户的-shell-登录权限，从而只能用-git-clone，git-push-等登录" class="headerlink" title="6、为了安全起见禁用 git 用户的 shell 登录权限，从而只能用 git clone，git push 等登录"></a>6、为了安全起见禁用 git 用户的 shell 登录权限，从而只能用 git clone，git push 等登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells // 查看 git-shell 是否在登录方式里面</span><br><span class="line">which git-shell // 查看是否安装</span><br><span class="line">vi /etc/shells</span><br><span class="line">添加上2步显示出来的路劲，通常在 /usr/bin/git-shell</span><br></pre></td></tr></table></figure><p>修改/etc/passwd中的权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 将原来的</span><br><span class="line">git:x:1000:1000::/home/git:/bin/bash</span><br><span class="line"></span><br><span class="line">// 修改为</span><br><span class="line">git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><h1 id="五、搭建nginx"><a href="#五、搭建nginx" class="headerlink" title="五、搭建nginx"></a>五、搭建nginx</h1><p>参考<a href="hqyx.xyz">CentOS7安装Nginx</a></p><p>我们要配置ssl所以使用</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="attribute">configure</span> --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_module</span><br></pre></td></tr></table></figure><p>我们去腾讯云申请一个免费的ssl <a href="https://cloud.tencent.com/document/product/400/6814">申请地址</a></p><p>按照文档进行操作</p><p>等签发证书后下载证书安装文档进行操作<a href="https://cloud.tencent.com/document/product/400/35244">Nginx 服务器 SSL 证书安装部署</a></p><p>按照文档编辑nginx配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>编辑好之后重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill -9 nginx      //强制停止Nginx</span><br><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line">./nginx </span><br></pre></td></tr></table></figure><p>之后我们就可以看到</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-20210521160754853.png" alt="image-20210521160754853"></p><p>变成安全链接了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装Nginx</title>
      <link href="/bh32b53f"/>
      <url>/bh32b53f</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 nginx</p><h1 id="安装所需环境"><a href="#安装所需环境" class="headerlink" title="安装所需环境"></a>安装所需环境</h1><h2 id="一-gcc-安装"><a href="#一-gcc-安装" class="headerlink" title="一. gcc 安装"></a>一. gcc 安装</h2><p>安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc-c++</span><br></pre></td></tr></table></figure><h2 id="二-PCRE-pcre-devel-安装"><a href="#二-PCRE-pcre-devel-安装" class="headerlink" title="二. PCRE pcre-devel 安装"></a>二. PCRE pcre-devel 安装</h2><p>PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。nginx也需要此库。命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure><h2 id="三-zlib-安装"><a href="#三-zlib-安装" class="headerlink" title="三. zlib 安装"></a>三. zlib 安装</h2><p>zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure><h2 id="四-OpenSSL-安装"><a href="#四-OpenSSL-安装" class="headerlink" title="四. OpenSSL 安装"></a>四. OpenSSL 安装</h2><p>OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。<br>nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><h1 id="nginx下载配置"><a href="#nginx下载配置" class="headerlink" title="nginx下载配置"></a>nginx下载配置</h1><h2 id="官网下载"><a href="#官网下载" class="headerlink" title="官网下载"></a>官网下载</h2><p>1.nginx的官网地址：<a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-1.png" alt="image-1"></p><p>我这里下载 nginx-1.20.0 稳定版本</p><p>2.使用wget命令下载。如果没有安装wget，执行 yum install wget 安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://nginx.org/download/nginx-1.20.0.tar.gz</span><br></pre></td></tr></table></figure><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.20.0.tar.gz</span><br><span class="line">cd nginx-1.20.0</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p>使用配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">// 如果想要配置SSL协议，就执行下面一句!</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_module</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>nginx的配置文件位于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="启动、停止、重启nginx"><a href="#启动、停止、重启nginx" class="headerlink" title="启动、停止、重启nginx"></a>启动、停止、重启nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line">./nginx </span><br><span class="line">./nginx -s stop</span><br><span class="line">./nginx -s quit</span><br><span class="line">./nginx -s reload</span><br><span class="line">pkill -9 nginx      //强制停止Nginx</span><br></pre></td></tr></table></figure><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p>在rc.local增加启动代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.local</span><br></pre></td></tr></table></figure><p>增加一行 /usr/local/nginx/sbin/nginx<br>设置执行权限：chmod 755 /etc/rc.local</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇blog</title>
      <link href="2021/05/12/firstBlog/"/>
      <url>2021/05/12/firstBlog/</url>
      
        <content type="html"><![CDATA[<h3 id="这是我的博客"><a href="#这是我的博客" class="headerlink" title="这是我的博客"></a>这是我的博客</h3><blockquote><p>time:2021/5/12 下午17:55:13</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
