<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>思科登录路由器配置</title>
      <link href="article/sk51f5as.html"/>
      <url>article/sk51f5as.html</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络之思科路由器登录配置"><a href="#计算机网络之思科路由器登录配置" class="headerlink" title="计算机网络之思科路由器登录配置"></a>计算机网络之思科路由器登录配置</h1><p>使用思科模拟器实现</p><p>Packet Tracer</p><p>Packet Tracer 是由Cisco公司发布的一个辅助<a href="https://baike.baidu.com/item/%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7/6424496">学习工具</a>，为学习思科网络课程的初学者去设计、配置、排除<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%95%85%E9%9A%9C/1391028">网络故障</a>提供了网络模拟环境。</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco_logo.png" alt="Cisco_logo"></p><h2 id="登录路由器"><a href="#登录路由器" class="headerlink" title="登录路由器"></a>登录路由器</h2><h3 id="1、模拟本地登录"><a href="#1、模拟本地登录" class="headerlink" title="1、模拟本地登录"></a>1、模拟本地登录</h3><p>使用配置线连接console</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-01.png" alt="cisco-config-01"></p><p>单机PC0进入Desktop下点击Terminal进入操作界面</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-02.png" alt="cisco-config-02"></p><p>第一次进入界面</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-03.png" alt="cisco-config-03"></p><p>下面开始初始化配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;enable   //进入特权模式</span><br><span class="line">Router#configure terminal//从终端执行配置命令</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Router(config)#hostname Rt0//重命名</span><br><span class="line">Rt0(config)#no ip domain-lookup//取消域名查找</span><br><span class="line">Rt0(config)#enable secret 123//配置特权模式口令，secret用密文设置</span><br><span class="line">Rt0(config)#line con 0//配置本地登录口令</span><br><span class="line">Rt0(config-line)#password 321</span><br><span class="line">Rt0(config-line)#login//开启了login</span><br><span class="line">Rt0(config-line)#end//快速回到特权模式</span><br><span class="line">Rt0#</span><br><span class="line">%SYS-5-CONFIG_I: Configured from console by console</span><br><span class="line"></span><br><span class="line">Rt0#copy running-config startup-config    //保存配置</span><br><span class="line">Destination filename [startup-config]? </span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br><span class="line">Rt0#exit//退出特权模式</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-04.png" alt="cisco-config-04"></p><p>回车然后输入本地登录口令：  <mark class="hl-label blue">321</mark> </p><p>然后enable进入特权模式输入口令：<mark class="hl-label blue">123</mark> </p><div class="note danger no-icon flat"><p>输入密码时光标不会移动，输入错误时要重新输入</p></div><h3 id="2、模拟远程登陆"><a href="#2、模拟远程登陆" class="headerlink" title="2、模拟远程登陆"></a>2、模拟远程登陆</h3><p>在上一个实训基础上添加一台交换机和一台笔记本电脑</p><p>我们选择网段为192.168.100.0</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-05.png" alt="cisco-config-05"></p><p>要配置远程登陆口令，以开启远程登陆功能，如果没有配置远程登陆口令远程登陆就没法开启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Rt0(config)#line vty 0 4//同时允许4个终端</span><br><span class="line">Rt0(config-line)#password 123456</span><br><span class="line">Rt0(config-line)#login</span><br><span class="line">Rt0(config-line)#exit</span><br><span class="line">Rt0(config)#</span><br></pre></td></tr></table></figure><p>要配置Rt0路由器的F 0/0端口的地址为192.168.100.1 ，子网掩码为255.255.255.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Rt0(config)#interface fastEthernet 0/0//可简写为：int f 0/0</span><br><span class="line">Rt0(config-if)#ip address 192.168.100.1 255.255.255.0</span><br><span class="line">Rt0(config-if)#no shutdown</span><br><span class="line"></span><br><span class="line">Rt0(config-if)#</span><br><span class="line">%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to up</span><br><span class="line"></span><br><span class="line">Rt0(config-if)#end     </span><br><span class="line">Rt0#</span><br><span class="line">%SYS-5-CONFIG_I: Configured from console by console</span><br><span class="line"></span><br><span class="line">Rt0#write  //保存</span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br></pre></td></tr></table></figure><p>配置pc的ip地址为192.168.100.100</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-06.png" alt="cisco-config-06"></p><p>对笔记本电脑ip地址配置为192.168.100.101 <mark class="hl-label blue">类似上图</mark> </p><p>打开PC0的COMMAND PROMPT ping 192.168.100.1测试连通性</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-07.png" alt="cisco-config-07"></p><p>192.168.100.1可以快速应答</p><p>下面我们用telnet登陆192.168.100.1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PC&gt;telnet 192.168.100.1</span><br><span class="line">Trying 192.168.100.1 ...Open</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">User Access Verification</span><br><span class="line"></span><br><span class="line">Password:  //输入远程登陆密码</span><br><span class="line">Rt0&gt;</span><br></pre></td></tr></table></figure><p>接下来打开笔记本COMMAND PROMPT ping 192.168.100.1测试连通性</p><p>也能快速收到回复，说明网络联通性良好</p><p>再ping 192.168.100.100   也是快速响应</p><p>笔记本测试联通功能同上操作</p><h2 id="密码恢复和基本配置"><a href="#密码恢复和基本配置" class="headerlink" title="密码恢复和基本配置"></a>密码恢复和基本配置</h2><h3 id="1、路由器密码恢复"><a href="#1、路由器密码恢复" class="headerlink" title="1、路由器密码恢复"></a>1、路由器密码恢复</h3><p>如果忘记了Rt0的密码</p><p>首先我们单机Rt0</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-08.png" alt="cisco-config-08"></p><p>先关电源按钮，再开电源按钮，然后马上回到PC0的Terminal看到如下提示时,按<mark class="hl-label blue">ctrl+c</mark> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rommon 1 &gt; confreg 0x2142</span><br><span class="line">rommon 2 &gt; reset//重新启动</span><br></pre></td></tr></table></figure><p>重启时就跟初始化界面一样的了</p><p>我们使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy startup-config running=config</span><br></pre></td></tr></table></figure><p>命令恢复之前保存的命令就回到了跳过之前密码的样子</p><p>我们再重新配置密码</p><h3 id="2、路由器的基本配置"><a href="#2、路由器的基本配置" class="headerlink" title="2、路由器的基本配置"></a>2、路由器的基本配置</h3><div class="note primary no-icon flat"><blockquote><p>配置路由器主机名</p><p>Router(config)#hostname Rt0\</p></blockquote><blockquote><p>与路由器的口令相关的配置</p><p>Rt0(config)#enable password 123</p><p>Rt0(config)#enable secret 123</p><p>Rt0(config-line)#enable secret 123</p><p>下一条命令使所有口令都加密保存：</p><p>Rt0(config)#service password-encryption</p></blockquote><blockquote><p>输入错误的命令被当成域名解析</p><p>no ip domain-lookup</p></blockquote><blockquote><p>开启日志同步</p><p>logging synchronous  log  可简写 logg s</p></blockquote><blockquote><p>console 模式下 exec-timeout 0 0 表示永不超时</p></blockquote><blockquote><p>所有登陆口令加密保存</p><p>service password-encryption</p></blockquote><blockquote><p>设置路由器日期</p><p>Rt0#clock set 10:23:45 sep 2021</p></blockquote></div><h3 id="3查看路由器信息"><a href="#3查看路由器信息" class="headerlink" title="3查看路由器信息"></a>3查看路由器信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#show running-config</span><br><span class="line">#show startup-config</span><br><span class="line">#show interfaces</span><br><span class="line">#show version</span><br><span class="line">#show flash</span><br><span class="line">#show protocoles</span><br><span class="line">#show processes</span><br><span class="line">#show ip arp</span><br></pre></td></tr></table></figure><h2 id="配置文件和IOS的备份与恢复"><a href="#配置文件和IOS的备份与恢复" class="headerlink" title="配置文件和IOS的备份与恢复"></a>配置文件和IOS的备份与恢复</h2><h3 id="1、备份配置文件和IOS"><a href="#1、备份配置文件和IOS" class="headerlink" title="1、备份配置文件和IOS"></a>1、备份配置文件和IOS</h3><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-09.png" alt="cisco-config-09"></p><p>创建如上图所示链路图</p><p>我们网段选择192.168.100.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en</span><br><span class="line">Router#config t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Router(config)#hostname Rt0</span><br><span class="line">Rt0(config)#no ip domain-lookup</span><br><span class="line">Rt0(config)#service pass</span><br><span class="line">Rt0(config)#service password-encryption </span><br><span class="line">Rt0(config)#line con 0</span><br><span class="line">Rt0(config-line)#logg s</span><br><span class="line">Rt0(config-line)#exe 0 0</span><br><span class="line">Rt0(config-line)#line vty 0 4</span><br><span class="line">Rt0(config-line)#pass</span><br><span class="line">Rt0(config-line)#password 123456</span><br><span class="line">Rt0(config-line)#login</span><br><span class="line">Rt0(config-line)#logg s</span><br><span class="line">Rt0(config-line)#exe 0 0 </span><br><span class="line">Rt0(config-line)#exit</span><br><span class="line">Rt0(config)#interface f 0/0</span><br><span class="line">Rt0(config-if)#ip add 192.168.100.1 255.255.255.0</span><br><span class="line">Rt0(config-if)#end </span><br><span class="line">Rt0#</span><br><span class="line">%SYS-5-CONFIG_I: Configured from console by console</span><br><span class="line"></span><br><span class="line">Rt0#w</span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br><span class="line">Rt0#</span><br></pre></td></tr></table></figure><p>配置服务器的IP地址为192.168.100.100</p><p>在Rt0上测试连通性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Rt0#ping 192.168.100.100</span><br><span class="line"></span><br><span class="line">Type escape sequence to abort.</span><br><span class="line">Sending 5, 100-byte ICMP Echos to 192.168.100.100, timeout is 2 seconds:</span><br><span class="line">.!!!!</span><br><span class="line">Success rate is 80 percent (4/5), round-trip min/avg/max = 0/0/0 ms</span><br></pre></td></tr></table></figure><p>出现<mark class="hl-label orange">!!!!</mark> 表示连通</p><p>在服务器上检查TFTP是否开启</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-10.png" alt="cisco-config-10"></p><p>备份running-config tftp到服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Rt0#copy running-config tftp</span><br><span class="line">Address or name of remote host []? 192.168.100.100</span><br><span class="line">Destination filename [Rt0-confg]? Rt0-config</span><br><span class="line"></span><br><span class="line">Writing running-config...!!</span><br><span class="line">[OK - 540 bytes]</span><br><span class="line"></span><br><span class="line">540 bytes copied in 0.002 secs (270000 bytes/sec)</span><br><span class="line">Rt0#</span><br></pre></td></tr></table></figure><p>再到上图界面就可以看到Rt0-config的配置文件</p><p>我们再使用show flash 备份c2600-i-mz.122-28.bin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Rt0#show flash</span><br><span class="line"></span><br><span class="line">System flash directory:</span><br><span class="line">File  Length   Name/status</span><br><span class="line">  3   5571584  c2600-i-mz.122-28.bin</span><br><span class="line">  2   28282    sigdef-category.xml</span><br><span class="line">  1   227537   sigdef-default.xml</span><br><span class="line">[5827403 bytes used, 58188981 available, 64016384 total]</span><br><span class="line">63488K bytes of processor board System flash (Read/Write)</span><br><span class="line"></span><br><span class="line">Rt0#copy flash: tftp</span><br><span class="line">Source filename []? c2600-i-mz.122-28.bin</span><br><span class="line">Address or name of remote host []? 192.168.100.100</span><br><span class="line">Destination filename [c2600-i-mz.122-28.bin]? c2600-i-mz.122-28.bin.bak</span><br><span class="line"></span><br><span class="line">Writing c2600-i-mz.122-28.bin...!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line">[OK - 5571584 bytes]</span><br><span class="line"></span><br><span class="line">5571584 bytes copied in 0.096 secs (13298090 bytes/sec)</span><br><span class="line">Rt0#</span><br></pre></td></tr></table></figure><p>再到上图界面就可以看到c2600-i-mz.122-28.bin.bak的配置文件</p><p>到处备份配置文件和IOS就到这完成了</p><h3 id="2、恢复配置文件和IOS"><a href="#2、恢复配置文件和IOS" class="headerlink" title="2、恢复配置文件和IOS"></a>2、恢复配置文件和IOS</h3><blockquote><p>恢复运行配置文件的命令：</p><p>Route# copy tftp run</p></blockquote><blockquote><p>恢复IOS的命令：</p><p>Route#copy tftp flash</p></blockquote><p>我们故意删除配置文件重启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Rt0#erase startup-config </span><br><span class="line">Erasing the nvram filesystem will remove all configuration files! Continue? [confirm]</span><br><span class="line">[OK]</span><br><span class="line">Erase of nvram: complete</span><br><span class="line">%SYS-7-NV_BLOCK_INIT: Initialized the geometry of nvram</span><br><span class="line">Rt0#reload</span><br></pre></td></tr></table></figure><p>如果有配置文件则不会出现下面情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">         --- System Configuration Dialog ---</span><br><span class="line"></span><br><span class="line">Continue with configuration dialog? [yes/no]: </span><br></pre></td></tr></table></figure><p>我们想要恢复备份文件，那么必须把网络连通，所以对F 0/0口配一个IP地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Router(config-if)#ip address 192.168.100.1 255.255.255.0 </span><br><span class="line">Router(config-if)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-if)#</span><br><span class="line">%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to up</span><br></pre></td></tr></table></figure><p>ping 一下服务器测试连通性ping 192.168.100.100</p><p>TFTP服务器是通的说明网络已经恢复到连通状态</p><p>首先恢复配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Router#copy tftp running-config </span><br><span class="line">Address or name of remote host []? 192.168.100.100</span><br><span class="line">Source filename []? Rt0-config</span><br><span class="line">Destination filename [running-config]? </span><br><span class="line"></span><br><span class="line">Accessing tftp://192.168.100.100/Rt0-config...</span><br><span class="line">Loading Rt0-config from 192.168.100.100: !</span><br><span class="line">[OK - 540 bytes]</span><br><span class="line"></span><br><span class="line">540 bytes copied in 0 secs</span><br><span class="line">Rt0#</span><br><span class="line">%SYS-5-CONFIG_I: Configured from console by console</span><br><span class="line"></span><br><span class="line">Rt0#</span><br></pre></td></tr></table></figure><p>可以看到我们的提示符从Router变成了Rt0说明已经恢复成功了</p><p>然后write保存</p><p>恢复IOS有两种情况：</p><p>第一种情况是误删除IOS之后还没重启我们就可以执行</p><blockquote><p>copy TFTP flash</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Rt0#delete flash:c2600-i-mz.122-28.bin</span><br><span class="line">Delete filename [c2600-i-mz.122-28.bin]?</span><br><span class="line">Delete flash:/c2600-i-mz.122-28.bin? [confirm]</span><br></pre></td></tr></table></figure><p>删除后我们不要重启再查看flash,就看到文件被删除了这时候我们恢复</p><p>使用 copy TFTP flash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Rt0#copy TFTP flash</span><br><span class="line">Address or name of remote host []? 192.168.100.100</span><br><span class="line">Source filename []? c2600-i-mz.122-28.bin.bak</span><br><span class="line">Destination filename [c2600-i-mz.122-28.bin.bak]? c2600-i-mz.122-28.bin</span><br><span class="line"></span><br><span class="line">Accessing tftp://192.168.100.100/c2600-i-mz.122-28.bin.bak...</span><br><span class="line">Loading c2600-i-mz.122-28.bin.bak from 192.168.100.100: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line">[OK - 5571584 bytes]</span><br><span class="line"></span><br><span class="line">5571584 bytes copied in 0.099 secs (12895118 bytes/sec)</span><br></pre></td></tr></table></figure><p>恢复成功查看show flash</p><p>第二种是iOS损坏后已经重启过就比较麻烦</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Rt0#delete flash:c2600-i-mz.122-28.bin</span><br><span class="line">Delete filename [c2600-i-mz.122-28.bin]?</span><br><span class="line">Delete flash:/c2600-i-mz.122-28.bin? [confirm]</span><br><span class="line"></span><br><span class="line">Rt0#reload     //重启</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/cisco-config-11.png" alt="cisco-config-11"></p><p>重启后的样子</p><p>然后执行下面命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rommon 1 &gt; IP_ADDRESS=192.168.100.1</span><br><span class="line">rommon 2 &gt; IP_SUBNET_MASK=255.255.255.0</span><br><span class="line">rommon 3 &gt; DEFAULT_GATEWAY=192.168.100.1</span><br><span class="line">rommon 4 &gt; TFTP_SERVER=192.168.100.100</span><br><span class="line">rommon 5 &gt; TFTP_FILE=c2600-i-mz.122-28.bin</span><br></pre></td></tr></table></figure><p>才可以从TFTP服务器下载</p><p>再执行 <mark class="hl-label red">tftpdnld</mark> </p><p>模拟器上是不能恢复成功的，但是在真实的路由器上可以用这个方法恢复IOS</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络技术 </category>
          
          <category> 思科 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思科 </tag>
            
            <tag> Cisco </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo安装部署配置HTTPS</title>
      <link href="article/a5sd15s3.html"/>
      <url>article/a5sd15s3.html</url>
      
        <content type="html"><![CDATA[<p>把 Hexo 博客部署到服务器并配置HTTPS</p><h1 id="一、开始"><a href="#一、开始" class="headerlink" title="一、开始"></a>一、开始</h1><h2 id="配置本地-node-环境"><a href="#配置本地-node-环境" class="headerlink" title="配置本地 node 环境"></a>配置本地 node 环境</h2><h3 id="1、nodejs下载-官网下载"><a href="#1、nodejs下载-官网下载" class="headerlink" title="1、nodejs下载 官网下载"></a>1、nodejs下载 <a href="http://nodejs.cn/download/">官网下载</a></h3><h3 id="2、安装nodejs"><a href="#2、安装nodejs" class="headerlink" title="2、安装nodejs"></a>2、安装nodejs</h3><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-20210521152620516.png" alt="image-20210521152620516"></p><h2 id="配置本地-git-环境"><a href="#配置本地-git-环境" class="headerlink" title="配置本地 git 环境"></a>配置本地 git 环境</h2><h3 id="1、git下载-官网下载"><a href="#1、git下载-官网下载" class="headerlink" title="1、git下载 官网下载"></a>1、git下载 <a href="https://git-scm.com/">官网下载</a></h3><h3 id="2、安装git"><a href="#2、安装git" class="headerlink" title="2、安装git"></a>2、安装git</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h1 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="1、初始化hexo项目"><a href="#1、初始化hexo项目" class="headerlink" title="1、初始化hexo项目"></a>1、初始化hexo项目</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-20210521154341249.png" alt="image-20210521154341249"></p><h3 id="2、生成blog后安装主题"><a href="#2、生成blog后安装主题" class="headerlink" title="2、生成blog后安装主题"></a>2、生成blog后安装主题</h3><p>我这里使用的是butterfly主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="3、修改配置文件-config-yml，把主题改为butterfly"><a href="#3、修改配置文件-config-yml，把主题改为butterfly" class="headerlink" title="3、修改配置文件_config.yml，把主题改为butterfly"></a>3、修改配置文件_config.yml，把主题改为butterfly</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><blockquote><p>把主题文件夹中的 _config.yml 复制到 Hexo 根目录里，同时重新命名为 _config.butterfly.yml。</p><p>以后只需要在 _config.butterfly.yml进行配置就行。</p><p>Hexo会自动合併主题中的config.yml和 _config.butterfly.yml里的配置，如果存在同名配置，会使用config.butterfly.yml的配置，其优先度较高</p></blockquote><p>具体配置请参考<a href="https://butterfly.js.org/">butterfly官网</a></p><p>本地测试、在根目录下git执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h1 id="三、git环境搭建"><a href="#三、git环境搭建" class="headerlink" title="三、git环境搭建"></a>三、git环境搭建</h1><p>生成ssh认证，执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email youremail@example.com</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br><span class="line">git config --global core.autocrlf false  // 禁用自动转换，这个不设置后面上传时会出现警告，如下</span><br></pre></td></tr></table></figure><p>获取到的ssh认证在C:\Users\yourname\.ssh中</p><h1 id="四、服务器配置"><a href="#四、服务器配置" class="headerlink" title="四、服务器配置"></a>四、服务器配置</h1><h3 id="1、登录到远程服务器"><a href="#1、登录到远程服务器" class="headerlink" title="1、登录到远程服务器"></a>1、登录到远程服务器</h3><h3 id="2、安装-git"><a href="#2、安装-git" class="headerlink" title="2、安装 git"></a>2、安装 git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git --version // 如无，则安装</span><br><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</span><br><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><h3 id="3、创建用户并配置其仓库"><a href="#3、创建用户并配置其仓库" class="headerlink" title="3、创建用户并配置其仓库"></a>3、创建用户并配置其仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd git</span><br><span class="line">passwd git // 设置密码</span><br><span class="line">su git // 这步很重要，不切换用户后面会很麻烦</span><br><span class="line">cd /home/git/</span><br><span class="line">mkdir -p projects/blog // 项目存在的真实目录</span><br><span class="line">mkdir repos &amp;&amp; cd repos</span><br><span class="line">git init --bare blog.git // 创建一个裸露的仓库</span><br><span class="line">cd blog.git/hooks</span><br><span class="line">vi post-receive // 创建 hook 钩子函数，输入了内容如下</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure><h3 id="4、添加完毕后修改权限"><a href="#4、添加完毕后修改权限" class="headerlink" title="4、添加完毕后修改权限"></a>4、添加完毕后修改权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br><span class="line">exit // 退出到 root 登录</span><br><span class="line">chown -R git:git /home/git/repos/blog.git // 添加权限</span><br></pre></td></tr></table></figure><p>返回windows，测试git仓库是否可用，另找空白文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@server_ip:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p>如果能把空仓库拉下来，就说明 git 仓库搭建成功了</p><h3 id="5、建立ssh信任关系，在本地电脑"><a href="#5、建立ssh信任关系，在本地电脑" class="headerlink" title="5、建立ssh信任关系，在本地电脑"></a>5、建立ssh信任关系，在本地电脑</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i C:/Users/yourname/.ssh/id_rsa.pub git@server_ip</span><br><span class="line">ssh git@server_ip // 测试能否登录</span><br></pre></td></tr></table></figure><p><strong>注</strong>：此时的 ssh 登录 git 用户不需要密码！否则就有错，请仔细重复步骤 3-5</p><h3 id="6、为了安全起见禁用-git-用户的-shell-登录权限，从而只能用-git-clone，git-push-等登录"><a href="#6、为了安全起见禁用-git-用户的-shell-登录权限，从而只能用-git-clone，git-push-等登录" class="headerlink" title="6、为了安全起见禁用 git 用户的 shell 登录权限，从而只能用 git clone，git push 等登录"></a>6、为了安全起见禁用 git 用户的 shell 登录权限，从而只能用 git clone，git push 等登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells // 查看 git-shell 是否在登录方式里面</span><br><span class="line">which git-shell // 查看是否安装</span><br><span class="line">vi /etc/shells</span><br><span class="line">添加上2步显示出来的路劲，通常在 /usr/bin/git-shell</span><br></pre></td></tr></table></figure><p>修改/etc/passwd中的权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 将原来的</span><br><span class="line">git:x:1000:1000::/home/git:/bin/bash</span><br><span class="line"></span><br><span class="line">// 修改为</span><br><span class="line">git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><h1 id="五、搭建nginx并上传hexo"><a href="#五、搭建nginx并上传hexo" class="headerlink" title="五、搭建nginx并上传hexo"></a>五、搭建nginx并上传hexo</h1><p>参考<a href="https://hqyx.xyz/article/bh32b53f">CentOS7安装Nginx</a></p><p>我们要配置ssl所以使用</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="attribute">configure</span> --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_module</span><br></pre></td></tr></table></figure><p>我们去腾讯云申请一个免费的ssl <a href="https://cloud.tencent.com/document/product/400/6814">申请地址</a></p><p>按照文档进行操作</p><p>等签发证书后下载证书安装文档进行操作<a href="https://cloud.tencent.com/document/product/400/35244">Nginx 服务器 SSL 证书安装部署</a></p><p>按照文档编辑nginx配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>编辑好之后重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill -9 nginx      //强制停止Nginx</span><br><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line">./nginx </span><br></pre></td></tr></table></figure><p>本地上传hexo项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>修改配置文件_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">server:</span> <span class="string">git@server_ip:/home/git/repos/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>上传hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>之后我们就可以看到</p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-20210521160754853.png" alt="image-20210521160754853"></p><p>变成安全链接了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装Nginx</title>
      <link href="article/bh32b53f.html"/>
      <url>article/bh32b53f.html</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 nginx</p><h1 id="安装所需环境"><a href="#安装所需环境" class="headerlink" title="安装所需环境"></a>安装所需环境</h1><h2 id="一-gcc-安装"><a href="#一-gcc-安装" class="headerlink" title="一. gcc 安装"></a>一. gcc 安装</h2><p>安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc-c++</span><br></pre></td></tr></table></figure><h2 id="二-PCRE-pcre-devel-安装"><a href="#二-PCRE-pcre-devel-安装" class="headerlink" title="二. PCRE pcre-devel 安装"></a>二. PCRE pcre-devel 安装</h2><p>PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。nginx也需要此库。命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure><h2 id="三-zlib-安装"><a href="#三-zlib-安装" class="headerlink" title="三. zlib 安装"></a>三. zlib 安装</h2><p>zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure><h2 id="四-OpenSSL-安装"><a href="#四-OpenSSL-安装" class="headerlink" title="四. OpenSSL 安装"></a>四. OpenSSL 安装</h2><p>OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。<br>nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><h1 id="nginx下载配置"><a href="#nginx下载配置" class="headerlink" title="nginx下载配置"></a>nginx下载配置</h1><h2 id="官网下载"><a href="#官网下载" class="headerlink" title="官网下载"></a>官网下载</h2><p>1.nginx的官网地址：<a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/superherotang/cdn/images/image-1.png" alt="image-1"></p><p>我这里下载 nginx-1.20.0 稳定版本</p><p>2.使用wget命令下载。如果没有安装wget，执行 yum install wget 安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://nginx.org/download/nginx-1.20.0.tar.gz</span><br></pre></td></tr></table></figure><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.20.0.tar.gz</span><br><span class="line">cd nginx-1.20.0</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p>使用配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">// 如果想要配置SSL协议，就执行下面一句!</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_module</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>nginx的配置文件位于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="启动、停止、重启nginx"><a href="#启动、停止、重启nginx" class="headerlink" title="启动、停止、重启nginx"></a>启动、停止、重启nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line">./nginx </span><br><span class="line">./nginx -s stop</span><br><span class="line">./nginx -s quit</span><br><span class="line">./nginx -s reload</span><br><span class="line">pkill -9 nginx      //强制停止Nginx</span><br></pre></td></tr></table></figure><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p>在rc.local增加启动代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.local</span><br></pre></td></tr></table></figure><p>增加一行 /usr/local/nginx/sbin/nginx<br>设置执行权限：chmod 755 /etc/rc.local</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇blog</title>
      <link href="article/851fdae.html"/>
      <url>article/851fdae.html</url>
      
        <content type="html"><![CDATA[<h3 id="这是我的博客"><a href="#这是我的博客" class="headerlink" title="这是我的博客"></a>这是我的博客</h3><blockquote><p>time:2021/5/12 下午17:55:13</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
